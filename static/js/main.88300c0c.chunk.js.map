{"version":3,"sources":["musics/pm.mp3","components/LeftBar.js","components/MainNav.js","components/Player.js","components/RegisterBar.js","components/Album.js","components/AlbumsContainer.js","components/RegisterPopUp.js","components/GenreCard.js","components/Search.js","components/Song.js","components/PlaylistPopUp.js","components/Playlist.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LeftBar","props","className","to","alt","id","src","onClick","hidePopUp","showPopUp","href","MainNav","history","useHistory","type","goBack","console","log","goForward","Player","interval","useState","isPlaying","setIsPlaying","percentage","setPercentage","currentTime","duration","currentSong","setCurrentSong","actualPercentage","toFixed","toMinutes","time","minutes","Math","floor","seconds","ref","mySong","require","pause","clearInterval","setInterval","play","style","width","RegisterBar","Album","AlbumsContainer","window","innerWidth","cantAlbums","map","e","key","RegisterPopUp","show","Fragment","GenreCard","randomColor","random","toString","backgroundColor","Search","Song","PlaylistPopUp","image","Playlist","setShowPopUp","App","popUp","setPopUp","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.88300c0c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pm.659ef56b.mp3\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst LeftBar = props => {\n  return (\n    <div className=\"leftNavBar\">\n      <Link to=\"/\">\n        <img\n          alt=\"spotify-logo\"\n          id=\"spotify-logo\"\n          src=\"https://storage.googleapis.com/pr-newsroom-wp/1/2018/11/Spotify_Logo_RGB_White.png\"\n        />\n      </Link>\n      <nav className=\"leftMenu\">\n        <ul>\n          <li>\n            <Link className=\"leftMenuOptions\" to=\"/\" onClick={props.hidePopUp}>\n              <div className=\"leftMenuOption leftMenuOptionSelected\">\n                <img\n                  alt=\"icon\"\n                  src=\"https://pngimage.net/wp-content/uploads/2018/06/home-icon-white-png-1.png\"\n                ></img>\n                <p>Incio</p>\n              </div>\n            </Link>\n          </li>\n\n          <li>\n            <Link className=\"leftMenuOptions\" to=\"/search\">\n              <div className=\"leftMenuOption\">\n                <img\n                  alt=\"icon\"\n                  id=\"search\"\n                  src=\"https://cdn-icons-png.flaticon.com/512/54/54481.png\"\n                ></img>\n                <p>Buscar</p>\n              </div>\n            </Link>\n          </li>\n\n          <li>\n            <Link className=\"leftMenuOptions\" to=\"/\" onClick={props.showPopUp}>\n              <div className=\"leftMenuOption\">\n                <img\n                  alt=\"icon\"\n                  src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSngen86KVAR3SrNyLn4O_OyWC7yAYs-oEIOHaavdu_7CxABqjB\"\n                ></img>\n                <p>Tu biblioteca</p>\n              </div>\n            </Link>\n          </li>\n        </ul>\n      </nav>\n      <div className=\"leftNavFooter\">\n        <div className=\"leftNavFooterOptions\">\n          <a href=\"https://www.spotify.com/ar/legal/cookies-policy/\">Cookies</a>\n          <p>---</p>\n          <a href=\"https://www.spotify.com/legal/privacy-policy/\">privacidad</a>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default LeftBar;\n","import React from 'react';\nimport '../styles/mainNav.css';\nimport { useHistory } from 'react-router';\n\nconst MainNav = props => {\n  const history = useHistory();\n  return (\n    <div className=\"mainNav\">\n      <div className=\"MainNavControllers\">\n        <input\n          className=\"controllersButtons\"\n          id=\"previousButton\"\n          type=\"image\"\n          alt=\"previousButton\"\n          src=\"https://dls.tepapa.govt.nz/images/icons/png/icon-previous-spot.png\"\n          onClick={() => {\n            history.goBack();\n            console.log(history);\n          }}\n        />\n        <input\n          className=\"controllersButtons\"\n          id=\"nextButton\"\n          type=\"image\"\n          alt=\"nextButton\"\n          src=\"https://dls.tepapa.govt.nz/images/icons/png/icon-previous-spot.png\"\n          onClick={() => {\n            history.goForward();\n            console.log(history);\n          }}\n        />\n      </div>\n      <div className=\"mainNavButtons\">\n        <button id=\"register\">REGISTRARTE</button>\n        <button id=\"login\">INICIAR SESIÓN</button>\n      </div>\n    </div>\n  );\n};\n\nexport default MainNav;\n","import React, { useState } from 'react';\nimport 'react-h5-audio-player/lib/styles.css';\nimport '../styles/player.css';\n\nconst Player = () => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [percentage, setPercentage] = useState('0%');\n  const [currentSong, setCurrentSong] = useState({\n    currentTime: '0:00',\n    duration: '0:00'\n  });\n  let interval;\n  function actualPercentage() {\n    if (currentSong) {\n      let percentage = (\n        (currentSong.currentTime * 100) /\n        currentSong.duration\n      ).toFixed(2);\n      setPercentage(`${percentage}%`);\n    }\n  }\n\n  function toMinutes(time) {\n    if (!time) {\n      return '0:00';\n    }\n    let minutes = Math.floor(time / 60);\n    let seconds = time - minutes * 60;\n    return `${minutes}:${seconds.toFixed(0) < 10 ? '0' : ''}${seconds.toFixed(\n      0\n    )}`;\n  }\n  return (\n    <div className=\"BottomPlayer\">\n      <div className=\"PlayerControllers\">\n        <div className=\"PlayerButtons\">\n          <input\n            className=\"PlayerControllersButton\"\n            id=\"randomButton\"\n            type=\"image\"\n            alt=\"randomButton\"\n            src=\"https://cdn-icons-png.flaticon.com/512/1159/1159745.png\"\n          />\n          <input\n            className=\"PlayerControllersButton\"\n            onClick={() => {\n              currentSong.currentTime -= 5;\n              actualPercentage();\n            }}\n            id=\"previousPlayerButton\"\n            type=\"image\"\n            alt=\"previousPlayerButton\"\n            src=\"https://cdn-icons-png.flaticon.com/512/254/254437.png\"\n          />\n          <audio\n            ref={mySong => {\n              setCurrentSong(mySong);\n            }}\n          >\n            <source src={require('../musics/pm.mp3')} type=\"audio/mpeg\" />\n          </audio>\n          <input\n            className=\"PlayerControllersButton\"\n            onClick={() => {\n              setIsPlaying(!isPlaying);\n              if (isPlaying === true) {\n                currentSong.pause();\n                clearInterval(interval);\n              } else {\n                interval = setInterval(actualPercentage, 1000);\n                currentSong.play();\n              }\n            }}\n            id=\"playPlayerButton\"\n            type=\"image\"\n            alt=\"playPlayerButton\"\n            src={\n              isPlaying === true\n                ? 'https://cdn-icons-png.flaticon.com/512/16/16427.png'\n                : 'https://cdn-icons-png.flaticon.com/512/0/375.png'\n            }\n          />\n          <input\n            className=\"PlayerControllersButton\"\n            onClick={() => {\n              currentSong.currentTime += 5;\n              actualPercentage();\n            }}\n            id=\"nextPlayerButton\"\n            type=\"image\"\n            alt=\"nextPlayerButton\"\n            src=\"https://cdn-icons-png.flaticon.com/512/254/254437.png\"\n          />\n          <input\n            className=\"PlayerControllersButton\"\n            id=\"repeatPlayerButton\"\n            type=\"image\"\n            alt=\"repeatPlayerButton\"\n            src=\"https://cdn-icons-png.flaticon.com/512/70/70196.png\"\n          />\n        </div>\n        <div className=\"PlayerBar\">\n          <span>{toMinutes(currentSong.currentTime)}</span>\n          <div id=\"progressBar\">\n            <div\n              id=\"progressBarStatus\"\n              style={{ width: percentage }}\n              onClick={() => {\n                actualPercentage();\n              }}\n            ></div>\n          </div>\n          <span>{toMinutes(currentSong.duration)}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Player;\n","import React from 'react';\nimport '../styles/registerBar.css';\n\nconst RegisterBar = () => {\n  return (\n    <div className=\"registerContainer\">\n      <div className=\"registerWrapper\">\n        <div className=\"registerAdv\">\n          <p id=\"registerTitle\">Muestra de Spotify</p>\n          <p id=\"registerDescription\">\n            Regístrate para disfrutar de canciones y podcasts sin límites, con\n            anuncios ocasionales. No hace falta tarjeta de crédito.\n          </p>\n        </div>\n        <div className=\"registerAdvButton\">\n          <button>REGISTRARTE GRATIS</button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default RegisterBar;\n","import React from 'react';\nimport '../styles/album.css';\nimport { Link } from 'react-router-dom';\n\nconst Album = props => {\n  return (\n    <Link to=\"/playlist\" className=\"albumContainer\">\n      <div className=\"albumWrapper\">\n        <img\n          alt=\"albumImage\"\n          src=\"https://i.scdn.co/image/ab67706f00000002026bb258da135fa6d8744b0c\"\n        />\n        <p className=\"albumName\">Impulso Creativo</p>\n        <p className=\"albumDescription\">\n          Bases suaves para inspirarte mientras...\n        </p>\n      </div>\n      <div className=\"playButtonContainer\">\n        <div className=\"playButtonWrapper\">\n          <input\n            type=\"image\"\n            alt=\"playButton\"\n            src=\"https://cdn-icons-png.flaticon.com/512/0/375.png\"\n          />\n        </div>\n      </div>\n    </Link>\n  );\n};\nexport default Album;\n","import React from 'react';\nimport Album from './Album';\nimport '../styles/album.css';\n\nconst AlbumsContainer = props => {\n  let width = window.innerWidth;\n  let cantAlbums = [1];\n  if (width <= 768) {\n    cantAlbums = [1, 2];\n  } else if (width <= 1024) {\n    cantAlbums = [1, 2, 3, 4];\n  } else if (width <= 1444) {\n    cantAlbums = [1, 2, 3, 4, 5];\n  } else if (width > 1444) {\n    cantAlbums = [1, 2, 3, 4, 5, 6];\n  }\n  return (\n    <div className=\"albumsContainer\">\n      <div className=\"albumsWrapper\">\n        <div className=\"albumsHeader\">\n          <div className=\"albumsTitle\">\n            <h2>Concentración</h2>\n          </div>\n          <div className=\"albumsMore\">\n            <p className=\"albumButton\">VER MÁS</p>\n          </div>\n        </div>\n        <div className=\"albumsDescription\">\n          <p>Música para ayudar a concentrarte.</p>\n        </div>\n        <div className=\"albumsRecoContainer\">\n          {cantAlbums.map(e => (\n            <Album key={e} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AlbumsContainer;\n","import React from 'react';\nimport '../styles/registerPopUp.css';\n\nconst RegisterPopUp = (props) => {\n    if (props.show) {\n        return (\n            <div className=\"registerPopUpContainer\">\n                <div\n                    className=\"registerPopUpQuit\"\n                    onClick={props.hidePopUp}\n                ></div>\n                <div className=\"registerPopUpWrapper\">\n                    <div className=\"registerPopUpLeft\">\n                        <h1>\n                            Sácale todo el partido a Spotify con una cuenta\n                            gratis\n                        </h1>\n                        <ul>\n                            <li>Sin necesidad de tarjeta de crédito, nunca</li>\n                            <li>Podcasts sin límites</li>\n                            <li>Escucha tu música favorita, con anuncios</li>\n                        </ul>\n                        <p onClick={props.hidePopUp}>CERRAR</p>\n                    </div>\n                    <div className=\"registerPopUpRight\">\n                        <button className=\"registerButton\" id=\"register\">\n                            REGISTRARTE GRATIS\n                        </button>\n                        <hr className=\"solidDivisor\" />\n                        <p>¿Ya tienes cuenta?</p>\n                        <button className=\"registerButton\" id=\"login\">\n                            INICIAR SESIÓN\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    } else {\n        return <React.Fragment />;\n    }\n};\n\nexport default RegisterPopUp;\n","import React from 'react';\nimport '../styles/genreCard.css';\n\nconst GenreCard = () => {\n  let randomColor = Math.floor(Math.random() * 16777215).toString(16);\n  randomColor = '#' + randomColor;\n  return (\n    <div className=\"card\" style={{ backgroundColor: randomColor }}>\n      <h2 className=\"card-title\">Podcast</h2>\n      <img\n        className=\"card-image\"\n        alt=\"genre-card\"\n        src=\"https://t.scdn.co/images/ad4d5c268a214f78920517e76e6ed107.jpeg\"\n      />\n    </div>\n  );\n};\n\nexport default GenreCard;\n","import React from 'react';\nimport '../styles/search.css';\nimport GenreCard from './GenreCard';\n\nconst Search = () => {\n    return (\n        <div className=\"search-container\">\n            <div className=\"search-wrapper\">\n                <h1>Explorar todo</h1>\n                <div id=\"search-genres\">\n                    <GenreCard />\n                    <GenreCard />\n                    <GenreCard />\n                    <GenreCard />\n                    <GenreCard />\n                    <GenreCard />\n                    <GenreCard />\n                    <GenreCard />\n                    <GenreCard />\n                    <GenreCard />\n                    <GenreCard />\n                    <GenreCard />\n                    <GenreCard />\n                    <GenreCard />\n                    <GenreCard />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Search;\n","import React from 'react';\nimport '../styles/playlist.css';\n\nconst Song = props => {\n  return (\n    <li className=\"song\">\n      <img\n        alt=\"play-icon\"\n        className=\"playlist-icon\"\n        id=\"playlist-playnote\"\n        src=\"https://cdn-icons-png.flaticon.com/512/0/375.png\"\n        onClick={props.showPopUp}\n      ></img>\n      <div className=\"song-name\">\n        <h3>Bird Song</h3>\n        <a href=\"/\">Elderbrook</a>\n        <span> • </span>\n        <a href=\"/\">Old Friend</a>\n      </div>\n      <div className=\"song-more\">\n        <img\n          id=\"song-more-icon\"\n          alt=\"more\"\n          src=\"https://image.flaticon.com/icons/svg/2089/2089792.svg\"\n        />\n      </div>\n      <div className=\"song-duration\">\n        <p>3:16</p>\n      </div>\n    </li>\n  );\n};\nexport default Song;\n","import React from 'react';\nimport '../styles/playlistPopUp.css';\n\nconst PlaylistPopUp = props => {\n  if (props.show) {\n    return (\n      <div className=\"playlist-popup-container\">\n        <div className=\"playlist-popup-quit\" onClick={props.hidePopUp}></div>\n        <div className=\"playlist-popup-wrapper\">\n          <div className=\"playlist-popup-image\">\n            <img alt=\"popup-img\" src={props.image} />\n          </div>\n          <div className=\"playlist-popup-description\">\n            <h1>Empieza a escuchar con una cuenta de Spotify gratis</h1>\n            <button className=\"playlist-button\">REGISTRATE GRATIS</button>\n            <div className=\"playlist-popup-description-details\">\n              <p>¿Ya tienes cuenta?</p>\n              <button className=\"playlist-login\">INICIAR SESIÓN</button>\n            </div>\n          </div>\n        </div>\n        <button className=\"playlist-login\" id=\"close\" onClick={props.hidePopUp}>\n          Cerrar\n        </button>\n      </div>\n    );\n  } else {\n    return <React.Fragment />;\n  }\n};\n\nexport default PlaylistPopUp;\n","import React, { useState } from 'react';\nimport Song from './Song';\nimport PlaylistPopUp from './PlaylistPopUp';\nimport '../styles/playlist.css';\n\nconst Playlist = () => {\n    const [show, setShowPopUp] = useState(false);\n    function hidePopUp() {\n        setShowPopUp(false);\n    }\n    function showPopUp() {\n        setShowPopUp(true);\n    }\n    return (\n        <div id=\"playlist-container\">\n            <div className=\"playlist-wrapper\">\n                <div className=\"playlist-left\">\n                    <img\n                        alt=\"playlist\"\n                        className=\"playlist-img\"\n                        src=\"https://i.scdn.co/image/ab67706f00000002026bb258da135fa6d8744b0c\"\n                    />\n                    <div className=\"playlist-left-title\">\n                        <h2>Impulso Creativo</h2>\n                        <a href=\"/\">Spotify</a>\n                    </div>\n                    <div className=\"playlist-left-buttons\">\n                        <button\n                            className=\"playlist-button\"\n                            onClick={() => {\n                                showPopUp();\n                            }}\n                        >\n                            REPRODUCIR\n                        </button>\n                        <div className=\"playlist-fav\">\n                            <img\n                                className=\"playlist-icon\"\n                                alt=\"fav\"\n                                src=\"https://image.flaticon.com/icons/svg/1077/1077035.svg\"\n                                onClick={() => {\n                                    showPopUp();\n                                }}\n                            />\n                            <img\n                                className=\"playlist-icon\"\n                                alt=\"more\"\n                                src=\"https://image.flaticon.com/icons/svg/2089/2089792.svg\"\n                            />\n                        </div>\n                        <p>80 CANCIONES</p>\n                    </div>\n                </div>\n                <ul className=\"playlist-right\">\n                    <Song showPopUp={showPopUp} />\n                    <Song showPopUp={showPopUp} />\n                    <Song showPopUp={showPopUp} />\n                    <Song showPopUp={showPopUp} />\n                    <Song showPopUp={showPopUp} />\n                    <Song showPopUp={showPopUp} />\n                    <Song showPopUp={showPopUp} />\n                    <Song showPopUp={showPopUp} />\n                    <Song showPopUp={showPopUp} />\n                    <Song showPopUp={showPopUp} />\n                </ul>\n            </div>\n            <PlaylistPopUp\n                show={show}\n                hidePopUp={hidePopUp}\n                image=\"https://i.scdn.co/image/ab67706f00000002026bb258da135fa6d8744b0c\"\n            />\n        </div>\n    );\n};\nexport default Playlist;\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport LeftBar from './components/LeftBar';\nimport MainNav from './components/MainNav';\nimport Player from './components/Player';\nimport RegisterBar from './components/RegisterBar';\nimport AlbumsContainer from './components/AlbumsContainer';\n// import AlbumApi from './components/AlbumApi';\nimport RegisterPopUp from './components/RegisterPopUp';\nimport Search from './components/Search';\nimport Playlist from './components/Playlist';\n\nfunction App() {\n  const [popUp, setPopUp] = useState(false);\n  function hidePopUp() {\n    setPopUp(false);\n  }\n  function showPopUp() {\n    setPopUp(true);\n  }\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"bars\">\n          <LeftBar hidePopUp={hidePopUp} showPopUp={showPopUp} />\n          <div className=\"RightBar\">\n            <MainNav />\n            <Switch>\n              <Route exact path=\"/\">\n                <div className=\"albumesContainer\">\n                  <AlbumsContainer />\n                  <AlbumsContainer />\n                  <AlbumsContainer />\n                </div>\n              </Route>\n              <Route exact path=\"/spotifu\">\n                <div className=\"albumesContainer\">\n                  <AlbumsContainer />\n                  <AlbumsContainer />\n                  <AlbumsContainer />\n                </div>\n              </Route>\n              <Route exact path=\"/search\">\n                <Search />\n              </Route>\n              <Route exact path=\"/playlist\">\n                <Playlist />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n        <RegisterBar />\n        <Player />\n        <RegisterPopUp hidePopUp={hidePopUp} show={popUp} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}